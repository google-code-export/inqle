<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.inqle.core">
<annotation>
      <appInfo>
         <meta.schema plugin="org.inqle.core" id="org.inqle.core.factory" name="INQLE Core Factory Service"/>
      </appInfo>
      <documentation>
         This service allows plugins to create factories for any class.  Each such plugin must declare the interface of object, that the factory is capable of creating.

Example: We have an interface org.app.ILogger, and want plugins to contribute implementations thereof.  Our application needs to create a single ILogger instance.  There are a number of implementations of ILogger, including com.my.LoggerImpl_1, com.my.LoggerImpl_2

How to decide which implementation to use?  We employ the FactoryService to get a factory, for creating implementations of ILogger.  Plugins can declare such a factory using this extension point.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="factory">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the name of the Java class that creates the implementation
               </documentation>
            </annotation>
         </attribute>
         <attribute name="creates" type="string" use="required">
            <annotation>
               <documentation>
                  the fully qualified name of the Java interface, that this factory is capable of creating
               </documentation>
            </annotation>
         </attribute>
         <attribute name="weight" type="string" use="default" value="0">
            <annotation>
               <documentation>
                  the weight.  generally, when multiple extensions exist for a given interface, the factory with the highest weight will be the one used.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
