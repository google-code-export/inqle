// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.inqle.web;

import org.inqle.domain.Choice;
import org.inqle.domain.ChoiceTranslation;
import org.inqle.domain.Concept;
import org.inqle.domain.ConceptTranslation;
import org.inqle.domain.Datum;
import org.inqle.domain.Formula;
import org.inqle.domain.LatestParticipantDatum;
import org.inqle.domain.Participant;
import org.inqle.domain.Question;
import org.inqle.domain.Subscription;
import org.inqle.domain.Survey;
import org.inqle.domain.SurveyQuestion;
import org.inqle.domain.Unit;
import org.inqle.domain.security.Authority;
import org.inqle.domain.security.Principal;
import org.inqle.repository.DatumRepository;
import org.inqle.repository.QuestionRepository;
import org.inqle.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    DatumRepository ApplicationConversionServiceFactoryBean.datumRepository;
    
    @Autowired
    QuestionRepository ApplicationConversionServiceFactoryBean.questionRepository;
    
    public Converter<Choice, String> ApplicationConversionServiceFactoryBean.getChoiceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Choice, java.lang.String>() {
            public String convert(Choice choice) {
                return new StringBuilder().append(choice.getCreated()).append(' ').append(choice.getUpdated()).toString();
            }
        };
    }
    
    public Converter<Long, Choice> ApplicationConversionServiceFactoryBean.getIdToChoiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Choice>() {
            public org.inqle.domain.Choice convert(java.lang.Long id) {
                return Choice.findChoice(id);
            }
        };
    }
    
    public Converter<String, Choice> ApplicationConversionServiceFactoryBean.getStringToChoiceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Choice>() {
            public org.inqle.domain.Choice convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Choice.class);
            }
        };
    }
    
    public Converter<ChoiceTranslation, String> ApplicationConversionServiceFactoryBean.getChoiceTranslationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.ChoiceTranslation, java.lang.String>() {
            public String convert(ChoiceTranslation choiceTranslation) {
                return new StringBuilder().append(choiceTranslation.getCreated()).append(' ').append(choiceTranslation.getUpdated()).append(' ').append(choiceTranslation.getLang()).toString();
            }
        };
    }
    
    public Converter<Long, ChoiceTranslation> ApplicationConversionServiceFactoryBean.getIdToChoiceTranslationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.ChoiceTranslation>() {
            public org.inqle.domain.ChoiceTranslation convert(java.lang.Long id) {
                return ChoiceTranslation.findChoiceTranslation(id);
            }
        };
    }
    
    public Converter<String, ChoiceTranslation> ApplicationConversionServiceFactoryBean.getStringToChoiceTranslationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.ChoiceTranslation>() {
            public org.inqle.domain.ChoiceTranslation convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ChoiceTranslation.class);
            }
        };
    }
    
    public Converter<Concept, String> ApplicationConversionServiceFactoryBean.getConceptToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Concept, java.lang.String>() {
            public String convert(Concept concept) {
                return new StringBuilder().append(concept.getCreated()).append(' ').append(concept.getUpdated()).append(' ').append(concept.getConceptkey()).toString();
            }
        };
    }
    
    public Converter<Long, Concept> ApplicationConversionServiceFactoryBean.getIdToConceptConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Concept>() {
            public org.inqle.domain.Concept convert(java.lang.Long id) {
                return Concept.findConcept(id);
            }
        };
    }
    
    public Converter<String, Concept> ApplicationConversionServiceFactoryBean.getStringToConceptConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Concept>() {
            public org.inqle.domain.Concept convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Concept.class);
            }
        };
    }
    
    public Converter<ConceptTranslation, String> ApplicationConversionServiceFactoryBean.getConceptTranslationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.ConceptTranslation, java.lang.String>() {
            public String convert(ConceptTranslation conceptTranslation) {
                return new StringBuilder().append(conceptTranslation.getCreated()).append(' ').append(conceptTranslation.getUpdated()).append(' ').append(conceptTranslation.getLang()).append(' ').append(conceptTranslation.getConceptName()).toString();
            }
        };
    }
    
    public Converter<Long, ConceptTranslation> ApplicationConversionServiceFactoryBean.getIdToConceptTranslationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.ConceptTranslation>() {
            public org.inqle.domain.ConceptTranslation convert(java.lang.Long id) {
                return ConceptTranslation.findConceptTranslation(id);
            }
        };
    }
    
    public Converter<String, ConceptTranslation> ApplicationConversionServiceFactoryBean.getStringToConceptTranslationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.ConceptTranslation>() {
            public org.inqle.domain.ConceptTranslation convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ConceptTranslation.class);
            }
        };
    }
    
    public Converter<Datum, String> ApplicationConversionServiceFactoryBean.getDatumToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Datum, java.lang.String>() {
            public String convert(Datum datum) {
                return new StringBuilder().append(datum.getCreated()).append(' ').append(datum.getUpdated()).append(' ').append(datum.getNumericValue()).append(' ').append(datum.getTextValue()).toString();
            }
        };
    }
    
    public Converter<Long, Datum> ApplicationConversionServiceFactoryBean.getIdToDatumConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Datum>() {
            public org.inqle.domain.Datum convert(java.lang.Long id) {
                return datumRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Datum> ApplicationConversionServiceFactoryBean.getStringToDatumConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Datum>() {
            public org.inqle.domain.Datum convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Datum.class);
            }
        };
    }
    
    public Converter<Formula, String> ApplicationConversionServiceFactoryBean.getFormulaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Formula, java.lang.String>() {
            public String convert(Formula formula) {
                return new StringBuilder().append(formula.getCreated()).append(' ').append(formula.getUpdated()).append(' ').append(formula.getExpression()).toString();
            }
        };
    }
    
    public Converter<Long, Formula> ApplicationConversionServiceFactoryBean.getIdToFormulaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Formula>() {
            public org.inqle.domain.Formula convert(java.lang.Long id) {
                return Formula.findFormula(id);
            }
        };
    }
    
    public Converter<String, Formula> ApplicationConversionServiceFactoryBean.getStringToFormulaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Formula>() {
            public org.inqle.domain.Formula convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Formula.class);
            }
        };
    }
    
    public Converter<LatestParticipantDatum, String> ApplicationConversionServiceFactoryBean.getLatestParticipantDatumToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.LatestParticipantDatum, java.lang.String>() {
            public String convert(LatestParticipantDatum latestParticipantDatum) {
                return new StringBuilder().append(latestParticipantDatum.getCreated()).append(' ').append(latestParticipantDatum.getAskableAfter()).toString();
            }
        };
    }
    
    public Converter<Long, LatestParticipantDatum> ApplicationConversionServiceFactoryBean.getIdToLatestParticipantDatumConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.LatestParticipantDatum>() {
            public org.inqle.domain.LatestParticipantDatum convert(java.lang.Long id) {
                return LatestParticipantDatum.findLatestParticipantDatum(id);
            }
        };
    }
    
    public Converter<String, LatestParticipantDatum> ApplicationConversionServiceFactoryBean.getStringToLatestParticipantDatumConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.LatestParticipantDatum>() {
            public org.inqle.domain.LatestParticipantDatum convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), LatestParticipantDatum.class);
            }
        };
    }
    
    public Converter<Participant, String> ApplicationConversionServiceFactoryBean.getParticipantToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Participant, java.lang.String>() {
            public String convert(Participant participant) {
                return new StringBuilder().append(participant.getCreated()).append(' ').append(participant.getUpdated()).toString();
            }
        };
    }
    
    public Converter<Long, Participant> ApplicationConversionServiceFactoryBean.getIdToParticipantConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Participant>() {
            public org.inqle.domain.Participant convert(java.lang.Long id) {
                return Participant.findParticipant(id);
            }
        };
    }
    
    public Converter<String, Participant> ApplicationConversionServiceFactoryBean.getStringToParticipantConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Participant>() {
            public org.inqle.domain.Participant convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Participant.class);
            }
        };
    }
    
    public Converter<Question, String> ApplicationConversionServiceFactoryBean.getQuestionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Question, java.lang.String>() {
            public String convert(Question question) {
                return new StringBuilder().append(question.getText()).append(' ').append(question.getTag()).append(' ').append(question.getAbbreviation()).append(' ').append(question.getLatency()).toString();
            }
        };
    }
    
    public Converter<Long, Question> ApplicationConversionServiceFactoryBean.getIdToQuestionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Question>() {
            public org.inqle.domain.Question convert(java.lang.Long id) {
                return questionRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Question> ApplicationConversionServiceFactoryBean.getStringToQuestionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Question>() {
            public org.inqle.domain.Question convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Question.class);
            }
        };
    }
    
    public Converter<Subscription, String> ApplicationConversionServiceFactoryBean.getSubscriptionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Subscription, java.lang.String>() {
            public String convert(Subscription subscription) {
                return new StringBuilder().append(subscription.getCreated()).append(' ').append(subscription.getRank()).toString();
            }
        };
    }
    
    public Converter<Long, Subscription> ApplicationConversionServiceFactoryBean.getIdToSubscriptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Subscription>() {
            public org.inqle.domain.Subscription convert(java.lang.Long id) {
                return Subscription.findSubscription(id);
            }
        };
    }
    
    public Converter<String, Subscription> ApplicationConversionServiceFactoryBean.getStringToSubscriptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Subscription>() {
            public org.inqle.domain.Subscription convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Subscription.class);
            }
        };
    }
    
    public Converter<Survey, String> ApplicationConversionServiceFactoryBean.getSurveyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Survey, java.lang.String>() {
            public String convert(Survey survey) {
                return new StringBuilder().append(survey.getCreated()).toString();
            }
        };
    }
    
    public Converter<Long, Survey> ApplicationConversionServiceFactoryBean.getIdToSurveyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Survey>() {
            public org.inqle.domain.Survey convert(java.lang.Long id) {
                return Survey.findSurvey(id);
            }
        };
    }
    
    public Converter<String, Survey> ApplicationConversionServiceFactoryBean.getStringToSurveyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Survey>() {
            public org.inqle.domain.Survey convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Survey.class);
            }
        };
    }
    
    public Converter<SurveyQuestion, String> ApplicationConversionServiceFactoryBean.getSurveyQuestionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.SurveyQuestion, java.lang.String>() {
            public String convert(SurveyQuestion surveyQuestion) {
                return new StringBuilder().append(surveyQuestion.getPriority()).toString();
            }
        };
    }
    
    public Converter<Long, SurveyQuestion> ApplicationConversionServiceFactoryBean.getIdToSurveyQuestionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.SurveyQuestion>() {
            public org.inqle.domain.SurveyQuestion convert(java.lang.Long id) {
                return SurveyQuestion.findSurveyQuestion(id);
            }
        };
    }
    
    public Converter<String, SurveyQuestion> ApplicationConversionServiceFactoryBean.getStringToSurveyQuestionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.SurveyQuestion>() {
            public org.inqle.domain.SurveyQuestion convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SurveyQuestion.class);
            }
        };
    }
    
    public Converter<Unit, String> ApplicationConversionServiceFactoryBean.getUnitToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.Unit, java.lang.String>() {
            public String convert(Unit unit) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Unit> ApplicationConversionServiceFactoryBean.getIdToUnitConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.Unit>() {
            public org.inqle.domain.Unit convert(java.lang.Long id) {
                return Unit.findUnit(id);
            }
        };
    }
    
    public Converter<String, Unit> ApplicationConversionServiceFactoryBean.getStringToUnitConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.Unit>() {
            public org.inqle.domain.Unit convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Unit.class);
            }
        };
    }
    
    public Converter<Authority, String> ApplicationConversionServiceFactoryBean.getAuthorityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.security.Authority, java.lang.String>() {
            public String convert(Authority authority) {
                return new StringBuilder().append(authority.getRoleId()).append(' ').append(authority.getAuthority()).toString();
            }
        };
    }
    
    public Converter<Long, Authority> ApplicationConversionServiceFactoryBean.getIdToAuthorityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.security.Authority>() {
            public org.inqle.domain.security.Authority convert(java.lang.Long id) {
                return Authority.findAuthority(id);
            }
        };
    }
    
    public Converter<String, Authority> ApplicationConversionServiceFactoryBean.getStringToAuthorityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.security.Authority>() {
            public org.inqle.domain.security.Authority convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Authority.class);
            }
        };
    }
    
    public Converter<Principal, String> ApplicationConversionServiceFactoryBean.getPrincipalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.inqle.domain.security.Principal, java.lang.String>() {
            public String convert(Principal principal) {
                return new StringBuilder().append(principal.getUsername()).append(' ').append(principal.getPassword()).append(' ').append(principal.getCreated()).append(' ').append(principal.getUpdated()).toString();
            }
        };
    }
    
    public Converter<Long, Principal> ApplicationConversionServiceFactoryBean.getIdToPrincipalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.inqle.domain.security.Principal>() {
            public org.inqle.domain.security.Principal convert(java.lang.Long id) {
                return Principal.findPrincipal(id);
            }
        };
    }
    
    public Converter<String, Principal> ApplicationConversionServiceFactoryBean.getStringToPrincipalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.inqle.domain.security.Principal>() {
            public org.inqle.domain.security.Principal convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Principal.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getChoiceToStringConverter());
        registry.addConverter(getIdToChoiceConverter());
        registry.addConverter(getStringToChoiceConverter());
        registry.addConverter(getChoiceTranslationToStringConverter());
        registry.addConverter(getIdToChoiceTranslationConverter());
        registry.addConverter(getStringToChoiceTranslationConverter());
        registry.addConverter(getConceptToStringConverter());
        registry.addConverter(getIdToConceptConverter());
        registry.addConverter(getStringToConceptConverter());
        registry.addConverter(getConceptTranslationToStringConverter());
        registry.addConverter(getIdToConceptTranslationConverter());
        registry.addConverter(getStringToConceptTranslationConverter());
        registry.addConverter(getDatumToStringConverter());
        registry.addConverter(getIdToDatumConverter());
        registry.addConverter(getStringToDatumConverter());
        registry.addConverter(getFormulaToStringConverter());
        registry.addConverter(getIdToFormulaConverter());
        registry.addConverter(getStringToFormulaConverter());
        registry.addConverter(getLatestParticipantDatumToStringConverter());
        registry.addConverter(getIdToLatestParticipantDatumConverter());
        registry.addConverter(getStringToLatestParticipantDatumConverter());
        registry.addConverter(getParticipantToStringConverter());
        registry.addConverter(getIdToParticipantConverter());
        registry.addConverter(getStringToParticipantConverter());
        registry.addConverter(getQuestionToStringConverter());
        registry.addConverter(getIdToQuestionConverter());
        registry.addConverter(getStringToQuestionConverter());
        registry.addConverter(getSubscriptionToStringConverter());
        registry.addConverter(getIdToSubscriptionConverter());
        registry.addConverter(getStringToSubscriptionConverter());
        registry.addConverter(getSurveyToStringConverter());
        registry.addConverter(getIdToSurveyConverter());
        registry.addConverter(getStringToSurveyConverter());
        registry.addConverter(getSurveyQuestionToStringConverter());
        registry.addConverter(getIdToSurveyQuestionConverter());
        registry.addConverter(getStringToSurveyQuestionConverter());
        registry.addConverter(getUnitToStringConverter());
        registry.addConverter(getIdToUnitConverter());
        registry.addConverter(getStringToUnitConverter());
        registry.addConverter(getAuthorityToStringConverter());
        registry.addConverter(getIdToAuthorityConverter());
        registry.addConverter(getStringToAuthorityConverter());
        registry.addConverter(getPrincipalToStringConverter());
        registry.addConverter(getIdToPrincipalConverter());
        registry.addConverter(getStringToPrincipalConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
