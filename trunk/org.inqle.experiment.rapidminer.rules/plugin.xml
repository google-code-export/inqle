<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>

  <extension
       point="org.inqle.data.datamodels">

<!--Create a system datamodel, to contain rules.  Add this annotation
to your SwrlRule class to make it be persisted here by default:
@TargetDatamodel("org.inqle.datamodels.rules")
-->
	<datamodel
		id="org.inqle.datamodels.rules"
	    weight="8500"
	    description="contains experiment results"
		cacheInMemory="false"
		targetDatabase="org.inqle.data.databases.cache">
	</datamodel>
  </extension>
  <extension
       point="org.inqle.experiment.rapidminer.IRapidMinerExperiment">
    <!--Add 1 entry per rapidminer experiment you add.  Your Java
code will have to look for rapidminer experiment extensions with
type="rules"
-->
    <rapidminer-experiment
               id="org.inqle.experiment.rules.VenkisRuleExperiment"

file="/org/inqle/experiment/rapidminer/rules/xml/VenkisRuleExperiment.xml"
               name="Venkis Rules Experiment"
               description="whatever"
               type="rules"
         weight="1000">
    </rapidminer-experiment>
 </extension>

<!--I made a change below.  You need your own factory for creating agent-->
      <extension
       point="org.inqle.agent.rap.IAgentFactory">
              <agent
         class="org.inqle.experiment.rapidminer.rules.agent.RuleExperimenterAgentFactory"
         name="Rules Experimenter Agent"
         description="This agent runs rule learning cycles, generating rules"
         weight="2000"
         access="admin"/>
 </extension>

<!--Can add this last.  A custom viewer of rules-->
- Hide quoted text -
 <extension
       point="org.eclipse.ui.views">

    <view
          name="Rules"
          icon="icons/rule.jpeg"
          class="org.inqle.experiment.rapidminer.rules.RulesView"
          id="org.inqle.experiment.rapidminer.rules.rulesView">
    </view>
 </extension>
</plugin>